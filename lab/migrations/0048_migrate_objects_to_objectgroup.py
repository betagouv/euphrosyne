# Generated by Django 5.1.5 on 2025-03-06 11:14

from django.db import migrations


def migrate_objects_to_objectgroup(apps, schema_editor):
    ObjectGroup = apps.get_model("lab", "ObjectGroup")
    Object = apps.get_model("lab", "Object")

    # Fetch all existing Objects
    for obj in Object.objects.all():
        # Create a new ObjectGroup instance
        diff_obj = ObjectGroup.objects.create(
            label=obj.label,
            collection=obj.collection,
            inventory=obj.inventory,
            is_differentiated=True,  # Marking it as differentiated
            c2rmf_id=obj.c2rmf_id if hasattr(obj, "c2rmf_id") else None,
            object_count=1,
        )

        # Associate the object to itself as a differentiated object
        obj.group.differentiated_objects.add(diff_obj)
        diff_obj.save()


def reverse_migration(apps, schema_editor):
    ObjectGroup = apps.get_model("lab", "ObjectGroup")
    Object = apps.get_model("lab", "Object")

    # Deleting all migrated ObjectGroup instances
    for obj_group in ObjectGroup.objects.filter(is_differentiated=True):
        Object.objects.create(
            label=obj_group.label,
            collection=obj_group.collection,
            inventory=obj_group.inventory,
            c2rmf_id=obj_group.c2rmf_id,
        )
        obj_group.parent_group.object_set.add(obj_group)
        obj_group.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("lab", "0047_objectgroup_is_differentiated_and_more"),
    ]

    operations = [
        migrations.RunPython(migrate_objects_to_objectgroup, reverse_migration),
        # migrations.DeleteModel(
        #    name="Object",
        # ),
    ]
