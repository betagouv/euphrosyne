# Generated by Django 4.0a1 on 2021-11-17 11:00

from pathlib import Path

from django.core.management import call_command
from django.db import migrations, models


def fill_is_lab_admin(apps, _):
    user_model = apps.get_model("euphro_auth", "User")
    user_model.objects.filter(groups__name="Admin").update(is_lab_admin=True)


def reverse_fill_is_lab_admin(apps, _):
    user_model = apps.get_model("euphro_auth", "User")
    admin_group, _ = apps.get_model("auth", "Group").objects.get_or_create(name="Admin")
    users = user_model.objects.filter(is_lab_admin=True)
    for user in users:
        user.groups.add(admin_group)


def delete_unused_django_auth_entries(apps, _):
    group_model = apps.get_model("auth", "Group")
    group_model.objects.all().delete()


def reverse_delete_unused_django_auth_entries(apps, _):
    fixture_path = Path(__file__).parent / "../fixtures/groups.yaml"
    call_command("loaddata", fixture_path)


class Migration(migrations.Migration):

    dependencies = [
        ("euphro_auth", "0008_remove_user_invitation_completed_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="user",
            name="is_lab_admin",
            field=models.BooleanField(
                default=False, verbose_name="is Euphrosyne admin"
            ),
        ),
        migrations.RunPython(fill_is_lab_admin, reverse_fill_is_lab_admin),
        migrations.RunPython(
            delete_unused_django_auth_entries, reverse_delete_unused_django_auth_entries
        ),
    ]
